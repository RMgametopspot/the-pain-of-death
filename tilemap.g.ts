// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . 2 2 2 . . . . . . 
. . . 2 2 2 . 2 . 2 . . . 2 2 2 
. . . 2 . 2 . 2 . 2 . . . 2 . 2 
. . . 2 . 2 . 2 . 2 . . . 2 . 2 
. . . 2 . 2 2 2 . 2 2 2 2 2 . 2 
. 2 2 2 . . . . . . . . . 2 . 2 
. 2 . . . 2 2 2 2 2 2 2 . . . 2 
. 2 2 2 . 2 . . . . . 2 . 2 2 2 
2 2 2 2 . 2 . . . . . 2 . 2 . . 
. . . . . 2 . 2 2 2 2 2 . 2 . . 
2 . 2 2 2 2 2 . . . . . . 2 . . 
2 . 2 . . . . 2 2 . 2 2 . 2 . . 
2 . 2 . . . . . . 2 . 2 . 2 2 2 
2 . 2 . . . . . . . . 2 . . . . 
2 . 2 . . . . . . . . 2 2 2 2 2 
. 2 . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.floorLightMoss,sprites.dungeon.floorLight4,sprites.dungeon.floorLight3,sprites.dungeon.floorLight5,sprites.dungeon.floorLight1,sprites.dungeon.stairWest], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
2 2 2 2 2 . . 2 2 2 2 2 2 2 2 2 
2 . . . 2 . . 2 . . . . . . . . 
2 2 2 . 2 2 2 2 . 2 2 2 . 2 2 2 
. . 2 . . . . . . 2 . 2 . 2 . . 
. . 2 2 2 2 2 2 . 2 . 2 . 2 . . 
. . . . . . . 2 . 2 2 2 . 2 . . 
. . . . . . . 2 . . . . . 2 . . 
2 2 2 2 2 2 . 2 . 2 2 2 . 2 . . 
2 . . . . 2 . 2 . 2 . 2 . 2 . . 
2 2 2 2 . 2 . 2 . 2 . 2 . 2 . . 
2 2 2 2 . 2 . 2 . 2 2 2 . 2 2 . 
2 . . . . 2 2 2 . . . . . . 2 2 
2 2 2 2 . . . . . 2 2 2 2 . . . 
. . . 2 2 2 2 2 2 2 . . 2 . . . 
. . . . . . . . . . . . 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorDark4,sprites.dungeon.floorDark1,sprites.dungeon.floorDarkDiamond,sprites.dungeon.floorDark5,sprites.dungeon.floorMixed,sprites.dungeon.floorDark3,sprites.dungeon.floorDark2,sprites.dungeon.stairLarge,myTiles.tile3], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . 2 . 2 . 
. . . 2 2 2 2 2 2 . . . 2 . 2 . 
2 2 2 2 . . . . 2 . . . 2 . 2 . 
2 . . . . 2 2 2 2 2 2 2 2 . 2 . 
2 2 2 2 . 2 . . 2 . . . . . 2 . 
2 2 2 2 . 2 . . 2 . 2 2 2 . 2 . 
2 . . . . 2 . . 2 . . . . . 2 . 
2 2 2 2 . 2 . . 2 2 2 2 2 . 2 . 
. . 2 2 . 2 2 2 2 2 . . 2 . 2 . 
. . 2 . . . . . . 2 . . 2 . 2 . 
. . 2 . 2 2 2 2 . 2 2 . 2 . 2 . 
. . 2 . 2 . . 2 . 2 2 . 2 . 2 . 
. . 2 . 2 . . 2 . 2 2 . 2 . 2 . 
. . 2 . 2 . . 2 . . . . . . 2 . 
. . 2 . 2 . . 2 2 2 2 2 2 2 2 . 
. . 2 . 2 . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile2,sprites.dungeon.chestClosed,sprites.dungeon.stairSouth,myTiles.tile3], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . 2 2 2 . . . . 2 . 2 . 
. . . . . 2 . 2 . . . . 2 . 2 . 
. . 2 2 2 2 . 2 2 . . . 2 . 2 . 
. . 2 . . . . . 2 . . . 2 . 2 . 
. 2 2 . 2 2 2 . 2 . . . 2 . 2 . 
. 2 . . 2 . 2 . 2 . . . 2 . 2 . 
. 2 2 . 2 . 2 . 2 2 2 2 2 . 2 . 
. . 2 . 2 . 2 . . . . . . . 2 . 
. . 2 . 2 . 2 2 . 2 . 2 2 . 2 . 
. . 2 . 2 . . 2 . 2 . 2 2 . 2 . 
. . 2 . 2 . . 2 . 2 . 2 2 . 2 . 
. . 2 . 2 . . 2 . . . 2 2 . 2 . 
2 2 2 . 2 . . 2 2 2 2 2 2 . 2 . 
. . . . 2 . . . . . . . 2 . 2 . 
2 2 2 2 2 . . . . . . . 2 . 2 . 
. . . . . . . . . . . . 2 2 2 . 
`, [myTiles.transparency16,myTiles.tile3,myTiles.tile4,myTiles.tile5], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . 2 2 2 . . . . . 
. . . . . . . . 2 . 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 . . . . . . . 
. 2 . . . . . . . . 2 2 2 2 2 2 
. 2 2 2 2 . 2 . 2 . 2 . . . . . 
. . . . 2 . 2 . 2 . 2 . . . . . 
. . . . 2 . 2 . 2 . 2 2 2 2 2 2 
. . 2 2 2 . 2 2 2 . . . . . . 2 
. . 2 . . . . . . . 2 2 2 2 2 2 
. . 2 . 2 2 2 . 2 2 2 . . . . . 
. . 2 . 2 . 2 . 2 . . . . . . . 
. . 2 . 2 . 2 . 2 2 2 2 2 . . . 
. . 2 . 2 . 2 . . . . . 2 . . . 
. . 2 . 2 . 2 2 2 2 2 . 2 . . . 
. . 2 . 2 . . . . . 2 2 2 . . . 
. . 2 . 2 . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile1,sprites.dungeon.chestClosed,sprites.dungeon.stairLadder,myTiles.tile3,myTiles.tile6], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level0":
            case "level8":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 . 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile5,myTiles.tile7], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile4":
            case "tile6":return tile6;
            case "myTile5":
            case "tile7":return tile7;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
